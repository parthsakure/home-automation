{"ast":null,"code":"var _jsxFileName = \"/Users/parthsakure/Desktop/Projects/home automation/frontend/src/components/login_register/login.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { Navigate } from \"react-router-dom\";\nimport { useUserExistContext } from \"../../context/userloggedIn\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Login(params) {\n  _s();\n  const [redirect, setRedirect] = useState(false);\n  const userContext = useUserExistContext();\n  const senddata = async event => {\n    event.preventDefault();\n    const form = event.target;\n    const formdata = new FormData(form);\n    const actualdata = {\n      username: formdata.get('username'),\n      password: formdata.get('password')\n    };\n    await fetch(params.url + \"login/\", {\n      method: \"POST\",\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(actualdata)\n    }).then(res => res.json()).then(data => {\n      if (data.token) {\n        localStorage.setItem(\"access_token\", data.token);\n        localStorage.setItem('user_id', data.user_id);\n        userContext.set(true);\n        setRedirect(true);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [redirect && /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: senddata,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          name: \"username\",\n          placeholder: \"Enter Username\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Enter Password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"success\",\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Login, \"6pPk97lTh5VyILUvf7tpljxvEZw=\", false, function () {\n  return [useUserExistContext];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","Button","Form","Navigate","useUserExistContext","Login","params","redirect","setRedirect","userContext","senddata","event","preventDefault","form","target","formdata","FormData","actualdata","username","get","password","fetch","url","method","headers","body","JSON","stringify","then","res","json","data","token","localStorage","setItem","user_id","set"],"sources":["/Users/parthsakure/Desktop/Projects/home automation/frontend/src/components/login_register/login.jsx"],"sourcesContent":["import { useState } from \"react\"\nimport { Button, Form } from \"react-bootstrap\"\nimport { Navigate } from \"react-router-dom\"\nimport { useUserExistContext } from \"../../context/userloggedIn\";\n\n\nfunction Login(params) {\n    \n    const [redirect, setRedirect] = useState(false);\n    const userContext = useUserExistContext();\n    \n    const senddata = async(event) => {\n        event.preventDefault();\n        const form = event.target;\n        const formdata = new FormData(form);\n        const actualdata = {\n            username: formdata.get('username'),\n            password: formdata.get('password')\n        }\n        await fetch(params.url + \"login/\", {\n\n            method: \"POST\",\n            headers: {\n                'Content-type':'application/json',\n            },\n            body: JSON.stringify(actualdata),\n        }).then(res => res.json()).then(data => {\n            if (data.token) {\n                localStorage.setItem(\"access_token\", data.token);\n                localStorage.setItem('user_id', data.user_id)\n                userContext.set(true);\n                setRedirect(true);\n            }\n        })\n    }\n\n\n    return (\n        <>\n            {redirect && <Navigate to=\"/\"/>}\n            <Form onSubmit={senddata}>\n                <Form.Group className=\"mb-3\" >\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control type='text' name=\"username\" placeholder=\"Enter Username\" required/>\n                </Form.Group>\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type='password' name=\"password\" placeholder=\"Enter Password\" required/>\n                </Form.Group>\n\n                <Button variant=\"success\" type=\"submit\">\n                    Login\n                </Button>\n            </Form>\n\n\n        </>\n    )\n}\n\nexport default Login;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,MAAM,EAAEC,IAAI,QAAQ,iBAAiB;AAC9C,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,mBAAmB,QAAQ,4BAA4B;AAAC;AAAA;AAGjE,SAASC,KAAK,CAACC,MAAM,EAAE;EAAA;EAEnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAMS,WAAW,GAAGL,mBAAmB,EAAE;EAEzC,MAAMM,QAAQ,GAAG,MAAMC,KAAK,IAAK;IAC7BA,KAAK,CAACC,cAAc,EAAE;IACtB,MAAMC,IAAI,GAAGF,KAAK,CAACG,MAAM;IACzB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAACH,IAAI,CAAC;IACnC,MAAMI,UAAU,GAAG;MACfC,QAAQ,EAAEH,QAAQ,CAACI,GAAG,CAAC,UAAU,CAAC;MAClCC,QAAQ,EAAEL,QAAQ,CAACI,GAAG,CAAC,UAAU;IACrC,CAAC;IACD,MAAME,KAAK,CAACf,MAAM,CAACgB,GAAG,GAAG,QAAQ,EAAE;MAE/BC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAC;MACnB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACV,UAAU;IACnC,CAAC,CAAC,CAACW,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CAACF,IAAI,CAACG,IAAI,IAAI;MACpC,IAAIA,IAAI,CAACC,KAAK,EAAE;QACZC,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEH,IAAI,CAACC,KAAK,CAAC;QAChDC,YAAY,CAACC,OAAO,CAAC,SAAS,EAAEH,IAAI,CAACI,OAAO,CAAC;QAC7C1B,WAAW,CAAC2B,GAAG,CAAC,IAAI,CAAC;QACrB5B,WAAW,CAAC,IAAI,CAAC;MACrB;IACJ,CAAC,CAAC;EACN,CAAC;EAGD,oBACI;IAAA,WACKD,QAAQ,iBAAI,QAAC,QAAQ;MAAC,EAAE,EAAC;IAAG;MAAA;MAAA;MAAA;IAAA,QAAE,eAC/B,QAAC,IAAI;MAAC,QAAQ,EAAEG,QAAS;MAAA,wBACrB,QAAC,IAAI,CAAC,KAAK;QAAC,SAAS,EAAC,MAAM;QAAA,wBACxB,QAAC,IAAI,CAAC,KAAK;UAAA,UAAC;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAa,eACjC,QAAC,IAAI,CAAC,OAAO;UAAC,IAAI,EAAC,MAAM;UAAC,IAAI,EAAC,UAAU;UAAC,WAAW,EAAC,gBAAgB;UAAC,QAAQ;QAAA;UAAA;UAAA;UAAA;QAAA,QAAE;MAAA;QAAA;QAAA;QAAA;MAAA,QACxE,eACb,QAAC,IAAI,CAAC,KAAK;QAAC,SAAS,EAAC,MAAM;QAAA,wBACxB,QAAC,IAAI,CAAC,KAAK;UAAA,UAAC;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAa,eACjC,QAAC,IAAI,CAAC,OAAO;UAAC,IAAI,EAAC,UAAU;UAAC,IAAI,EAAC,UAAU;UAAC,WAAW,EAAC,gBAAgB;UAAC,QAAQ;QAAA;UAAA;UAAA;UAAA;QAAA,QAAE;MAAA;QAAA;QAAA;QAAA;MAAA,QAC5E,eAEb,QAAC,MAAM;QAAC,OAAO,EAAC,SAAS;QAAC,IAAI,EAAC,QAAQ;QAAA,UAAC;MAExC;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACN;EAAA,gBAGR;AAEX;AAAC,GApDQL,KAAK;EAAA,QAGUD,mBAAmB;AAAA;AAAA,KAHlCC,KAAK;AAsDd,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}